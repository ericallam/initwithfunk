<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Paper | initWithFunk:]]></title>
  <link href="http://initwithfunk.com/blog/categories/paper/atom.xml" rel="self"/>
  <link href="http://initwithfunk.com/"/>
  <updated>2014-05-22T16:47:31+01:00</updated>
  <id>http://initwithfunk.com/</id>
  <author>
    <name><![CDATA[Eric Allam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to build the Facebook Paper status bar hover]]></title>
    <link href="http://initwithfunk.com/blog/2014/02/07/how-to-build-the-facebook-paper-status-bar-hover/"/>
    <updated>2014-02-07T16:43:00+00:00</updated>
    <id>http://initwithfunk.com/blog/2014/02/07/how-to-build-the-facebook-paper-status-bar-hover</id>
    <content type="html"><![CDATA[<p><img src="http://i.imgur.com/SHpj1Ll.gif" alt="paper" /></p>

<p>Among the <a href="http://blog.brianlovin.com/design-details-paper-by-facebook">many</a> great little design details in the new <a href="https://www.facebook.com/paper">Paper by Facebook</a> app released last week, this status-bar-hover thing caught me by surprise.  My first reaction was &ldquo;Hey, they can&rsquo;t do that!&rdquo;, but of course (and to quote my <a href="http://www.youtube.com/watch?v=3A0q36NOgdQ">favorite line</a> from Independence Day) well they just eh&hellip; did.</p>

<p>After a little digging around, I&rsquo;ve figured out how to do it and it involves using multiple <strong>UIWindow</strong> instances. I&rsquo;ve always thought that iOS applications could only ever use one <code>UIWindow</code>, but that turns out to be not the case. It&rsquo;s perfectly alright to have more than the <code>[UIApplication sharedApplication].keyWindow</code> which you usually create in the AppDelegate (or Storyboard creates it for you).</p>

<p>A <code>UIWindow</code> is just a subclass of <code>UIView</code>, but it&rsquo;s also a special type of view that&rsquo;s specifically for providing an area for displaying views and for distributing events to those views. A <code>UIWindow</code> instance has a property called <code>windowLevel</code> that allows you to specify where on the z-index the window appears relative to other windows in the app. Most of the time you only have your main window with a <code>windowLevel</code> set to <code>UIWindowLevelNormal</code>, and then occasionally a <code>UIAlertView</code> window is displayed with a <code>windowLevel</code> of <code>UIWindowLevelAlert</code>.</p>

<p>So to create a new <code>UIWindow</code> and have it&rsquo;s contents appear above the status bar, all you have to do is this:</p>

<p>```objc
UIWindow *foregroundWindow = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];</p>

<p>foregroundWindow.backgroundColor = [UIColor clearColor];
foregroundWindow.rootViewController = [ForegroundViewController new];
foregroundWindow.windowLevel = UIWindowLevelStatusBar;
foregroundWindow.hidden = NO;
```</p>

<p>That will display the contents of <code>ForegroundViewController</code> on top of the status bar. I&rsquo;ve put together a demo app with the above technique (combined with a sprinkle of a pan gesture and dynamics) that looks like this:</p>

<p><img src="http://i.imgur.com/D0Tly5s.gif" alt="demo" width=300 /></p>

<p>Download the project <a href="https://github.com/rubymaverick/Paper-StatusBarHover-Demo">over at github</a>.</p>

<h4>Gotchas</h4>

<p>The demo I built is probably not the end of the story. Check out <a href="http://shaune.com.au/using-multiple-uiwindows-in-ios-applications/">Shaun Ervine&rsquo;s post</a> on using multiple <code>UIWindow</code> instances for some possible issues / gotchas in using this technique.</p>
]]></content>
  </entry>
  
</feed>
